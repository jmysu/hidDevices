#include <stdint.h>
#include <math.h>

//RGB2Lab Lab2RGB
const float param_13 = 1.0f / 3.0f;
const float param_16116 = 16.0f / 116.0f;
const float Xn = 0.950456f;
const float Yn = 1.0f;
const float Zn = 1.088754f;

float gamma(float x)
{
	return (x > 0.04045) ? powf((x + 0.055f) / 1.055f, 2.4f):(x / 12.92);
}

void RGB2XYZ(uint8_t R, uint8_t G, uint8_t B, float *X, float *Y, float *Z)
{
	float RR = gamma(R / 255.0);
	float GG = gamma(G / 255.0);
	float BB = gamma(B / 255.0);

	*X = 0.4124564f * RR + 0.3575761f * GG + 0.1804375f * BB;
	*Y = 0.2126729f * RR + 0.7151522f * GG + 0.0721750f * BB;
	*Z = 0.0193339f * RR + 0.1191920f * GG + 0.9503041f * BB;
}

void XYZ2Lab(float X, float Y, float Z, float *L, float *a, float *b)
{
	float fX, fY, fZ;

	X /= (Xn);
	Y /= (Yn);
	Z /= (Zn);

	if (Y > 0.008856f)
		fY = pow(Y, param_13);
	else
		fY = 7.787f * Y + param_16116;

	if (X > 0.008856f)
		fX = pow(X, param_13);
	else
		fX = 7.787f * X + param_16116;

	if (Z > 0.008856)
		fZ = pow(Z, param_13);
	else
		fZ = 7.787f * Z + param_16116;

	*L = 116.0f * fY - 16.0f;
	*L = *L > 0.0f ? *L : 0.0f;
	*a = 500.0f * (fX - fY);
	*b = 200.0f * (fY - fZ);
}


float gamma_XYZ2RGB(float x)
{
	return (x > 0.0031308) ? (1.055f * powf(x, (1 / 2.4f)) - 0.055):(x * 12.92);
}

void XYZ2RGB(float X, float Y, float Z, unsigned char*R, unsigned char*G, unsigned char*B)
{
	float RR, GG, BB;
	RR = 3.2404542f * X - 1.5371385f * Y - 0.4985314f * Z;
	GG = -0.9692660f * X + 1.8760108f * Y + 0.0415560f * Z;
	BB = 0.0556434f * X - 0.2040259f * Y + 1.0572252f * Z;

	RR = gamma_XYZ2RGB(RR);
	GG = gamma_XYZ2RGB(GG);
	BB = gamma_XYZ2RGB(BB);

	//RR = CLIP255(RR * 255.0 + 0.5);
	RR = (RR > 255.5) ? 255:RR;
	//GG = CLIP255(GG * 255.0 + 0.5);
	GG = (GG > 255.5) ? 255:GG;
	//BB = CLIP255(BB * 255.0 + 0.5);
	BB = (BB > 255.5) ? 255:BB;

	*R = (unsigned char)RR;
	*G = (unsigned char)GG;
	*B = (unsigned char)BB;
}

void Lab2XYZ(float L, float a, float b, float *X, float *Y, float *Z)
{
	float fX, fY, fZ;

	fY = (L + 16.0f) / 116.0;
	fX = a / 500.0f + fY;
	fZ = fY - b / 200.0f;

	if (powf(fY, 3.0) > 0.008856)
		*Y = powf(fY, 3.0);
	else
		*Y = (fY - param_16116) / 7.787f;

	if (powf(fX, 3) > 0.008856)
		*X = fX * fX * fX;
	else
		*X = (fX - param_16116) / 7.787f;

	if (powf(fZ, 3.0) > 0.008856)
		*Z = fZ * fZ * fZ;
	else
		*Z = (fZ - param_16116) / 7.787f;

	(*X) *= (Xn);
	(*Y) *= (Yn);
	(*Z) *= (Zn);
}
